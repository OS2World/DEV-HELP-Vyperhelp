/*******************************************************************************
* FILE NAME: Vyper.hpp                                                         *
*                                                                              *
* DESCRIPTION:                                                                 *
*   Declaration of the class:                                                  *
*     Vyper- Vyper main window                                                 *
* ---------------------------------------------------------------------------- *
* Warning: This file was generated by the VisualAge C++ Visual Builder.        *
* Modifications to this source file will be lost when the part is regenerated. *
*******************************************************************************/
#ifndef _VYPER_
#define _VYPER_  

class Vyper;

#ifndef _IFRAME_
#include <iframe.hpp>
#endif

#ifndef _IOBSERVR_
#include <iobservr.hpp>
#endif

#ifndef _IACCEL_
#include <iaccel.hpp>
#endif

class IMenuBar;
class IInfoArea;
class ISplitCanvas;
#define INCL_WINSTDCNR
#include <os2.h>

#ifndef _VYSECTION_
#include "VySection.hpp"
#endif

#ifndef _IVSEQ_H_
#include <ivseq.h>
#endif

#ifndef _IVBCNR_
#include <ivbcnr.h>
#endif

class IViewPort;
class IHelpWindow;
class IVBFileDialog;
class VySection;
#ifndef _ISTDNTFY_
#include <istdntfy.hpp>
#endif

class VyDoc;
#ifndef _IVBVPRTP_
#include <ivbvprtp.h>
#endif

class VyDocProperties;
class VySectionProperties;
class Editor;
class IVBFontDialog;
class VySymbolSelector;
class VyLinkProperties;
class VyFont;
class Confirmation;
class LogicalNot;
class ITitle;
#ifndef _IVBVCLS_
#include <ivbvcls.h>
#endif

#ifndef _IIBASE_
#include <ibase.hpp>
#endif

#ifndef _VYSYMBOL_
#include "VySymbol.hpp"
#endif

template <class Element> class IVSequence;
class VySymbol;
class CloseHandler;
class VyInfo;
class ExceptionNotification;
class VyRegistration;
class VySettings;
class VyWait;
#ifndef _VYWAIT_
#include "VyWait.hpp"
#endif

class VyArtProperties;
#ifndef _IRECT_
#include <irect.hpp>
#endif

#ifndef _ISTRING_
#include <istring.hpp>
#endif

#ifndef _IVPORT_
#include <ivport.hpp>
#endif

#ifndef CONTAINERHELPHANDLER_HPP
#include "ContainerHelpHandler.hpp"
#endif

#ifndef SECTIONEDITHANDLER_HPP
#include "SectionEditHandler.hpp"
#endif

#ifndef GENERATOR_HPP
#include "Generator.hpp"
#endif

#ifndef EDITOR_HPP
#include "Editor.hpp"
#endif

#ifndef __locale_h
#include <locale.h>
#endif

#ifndef __malloc_h
#include <malloc.h>
#endif

class VyperConn11;
class VyperConn12;
class VyperConn13;
class VyperConn15;
class VyperConn337;
class VyperConn19;
class VyperConn22;
class VyperConn354;
class VyperConn406;
class VyperConn23;
class VyperConn397;
class VyperConn315;
class VyperConn17;
class VyperConn25;
class VyperConn27;
class VyperConn16;
class VyperConn32;
class VyperConn44;
class VyperConn59;
class VyperConn35;
class VyperConn38;
class VyperConn46;
class VyperConn55;
class VyperConn66;
class VyperConn49;
class VyperConn69;
class VyperConn346;
class VyperConn58;
class VyperConn79;
class VyperConn379;
class VyperConn326;
class VyperConn60;
class VyperConn52;
class VyperConn400;
class VyperConn336;
class VyperConn53;
class VyperConn65;
class VyperConn375;
class VyperConn56;
class VyperConn57;
class VyperConn386;
class VyperConn68;
class VyperConn376;
class VyperConn70;
class VyperConn62;
class VyperConn75;
class VyperConn67;
class VyperConn78;
class VyperConn91;
class VyperConn101;
class VyperConn72;
class VyperConn73;
class VyperConn74;
class VyperConn85;
class VyperConn76;
class VyperConn407;
class VyperConn77;
class VyperConn396;
class VyperConn88;
class VyperConn111;
class VyperConn82;
class VyperConn83;
class VyperConn84;
class VyperConn95;
class VyperConn86;
class VyperConn87;
class VyperConn98;
class VyperConn100;
class VyperConn92;
class VyperConn94;
class VyperConn96;
class VyperConn97;
class VyperConn108;
class VyperConn119;
class VyperConn110;
class VyperConn129;
class VyperConn120;
class VyperConn131;
class VyperConn102;
class VyperConn103;
class VyperConn104;
class VyperConn105;
class VyperConn106;
class VyperConn107;
class VyperConn118;
class VyperConn139;
class VyperConn130;
class VyperConn141;
class VyperConn112;
class VyperConn113;
class VyperConn114;
class VyperConn115;
class VyperConn116;
class VyperConn117;
class VyperConn240;
class VyperConn151;
class VyperConn213;
class VyperConn124;
class VyperConn125;
class VyperConn137;
class VyperConn148;
class VyperConn149;
class VyperConn140;
class VyperConn143;
class VyperConn136;
class VyperConn134;
class VyperConn157;
class VyperConn150;
class VyperConn171;
class VyperConn158;
class VyperConn142;
class VyperConn153;
class VyperConn145;
class VyperConn133;
class VyperConn155;
class VyperConn167;
class VyperConn168;
class VyperConn159;
class VyperConn160;
class VyperConn154;
class VyperConn178;
class VyperConn169;
class VyperConn162;
class VyperConn190;
class VyperConn181;
class VyperConn152;
class VyperConn163;
class VyperConn174;
class VyperConn165;
class VyperConn156;
class VyperConn177;
class VyperConn188;
class VyperConn189;
class VyperConn200;
class VyperConn201;
class VyperConn172;
class VyperConn183;
class VyperConn184;
class VyperConn175;
class VyperConn166;
class VyperConn187;
class VyperConn197;
class VyperConn207;
class VyperConn217;
class VyperConn198;
class VyperConn179;
class VyperConn170;
class VyperConn210;
class VyperConn220;
class VyperConn211;
class VyperConn182;
class VyperConn173;
class VyperConn194;
class VyperConn185;
class VyperConn176;
class VyperConn227;
class VyperConn208;
class VyperConn199;
class VyperConn230;
class VyperConn221;
class VyperConn192;
class VyperConn193;
class VyperConn204;
class VyperConn195;
class VyperConn186;
class VyperConn237;
class VyperConn218;
class VyperConn209;
class VyperConn219;
class VyperConn247;
class VyperConn229;
class VyperConn250;
class VyperConn202;
class VyperConn203;
class VyperConn214;
class VyperConn205;
class VyperConn215;
class VyperConn196;
class VyperConn257;
class VyperConn238;
class VyperConn239;
class VyperConn260;
class VyperConn241;
class VyperConn212;
class VyperConn224;
class VyperConn225;
class VyperConn248;
class VyperConn234;
class VyperConn235;
class VyperConn216;
class VyperConn277;
class VyperConn258;
class VyperConn259;
class VyperConn280;
class VyperConn261;
class VyperConn232;
class VyperConn243;
class VyperConn244;
class VyperConn245;
class VyperConn226;
class VyperConn287;
class VyperConn268;
class VyperConn269;
class VyperConn290;
class VyperConn271;
class VyperConn242;
class VyperConn253;
class VyperConn254;
class VyperConn255;
class VyperConn236;
class VyperConn297;
class VyperConn278;
class VyperConn279;
class VyperConn300;
class VyperConn281;
class VyperConn252;
class VyperConn263;
class VyperConn264;
class VyperConn265;
class VyperConn246;
class VyperConn307;
class VyperConn288;
class VyperConn289;
class VyperConn310;
class VyperConn273;
class VyperConn275;
class VyperConn256;
class VyperConn266;
class VyperConn276;
class VyperConn317;
class VyperConn298;
class VyperConn299;
class VyperConn378;
class VyperConn316;
class VyperConn320;
class VyperConn283;
class VyperConn361;
class VyperConn284;
class VyperConn286;
class VyperConn285;
class VyperConn308;
class VyperConn466;
class VyperConn309;
class VyperConn366;
class VyperConn330;
class VyperConn293;
class VyperConn388;
class VyperConn294;
class VyperConn356;
class VyperConn295;
class VyperConn318;
class VyperConn340;
class VyperConn319;
class VyperConn311;
class VyperConn292;
class VyperConn282;
class VyperConn303;
class VyperConn313;
class VyperConn304;
class VyperConn305;
class VyperConn306;
class VyperConn347;
class VyperConn328;
class VyperConn329;
class VyperConn350;
class VyperConn291;
class VyperConn302;
class VyperConn323;
class VyperConn314;
class VyperConn416;
class VyperConn338;
class VyperConn339;
class VyperConn360;
class VyperConn321;
class VyperConn312;
class VyperConn333;
class VyperConn324;
class VyperConn364;
class VyperConn335;
class VyperConn352;
class VyperConn426;
class VyperConn373;
class VyperConn367;
class VyperConn348;
class VyperConn349;
class VyperConn370;
class VyperConn331;
class VyperConn343;
class VyperConn345;
class VyperConn358;
class VyperConn359;
class VyperConn380;
class VyperConn341;
class VyperConn332;
class VyperConn353;
class VyperConn344;
class VyperConn355;
class VyperConn446;
class VyperConn387;
class VyperConn368;
class VyperConn369;
class VyperConn390;
class VyperConn351;
class VyperConn342;
class VyperConn363;
class VyperConn365;
#include "Vyper.h"


/*----------------------------------------------------------------------------*/
/* Align classes on four byte boundary.                                       */
/*----------------------------------------------------------------------------*/
#pragma pack(4)

//*****************************************************************************
// Class definition for VyperSectionContainerCnrObj
//*****************************************************************************
class VyperSectionContainerCnrObj : public IVBContainerObject {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   VyperSectionContainerCnrObj(VySection& anObject);
   VyperSectionContainerCnrObj(VyperSectionContainerCnrObj& anObject);

   virtual  ~VyperSectionContainerCnrObj();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   IVBContainerObject & refreshFromObject();
   IVBContainerObject & updateToObject();
   VyperSectionContainerCnrObj& operator=(const VyperSectionContainerCnrObj& anObject);
   VySection* realObject() { return &pRealObject; }
;

protected:
private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   VySection & pRealObject;


};   //VyperSectionContainerCnrObj


//*****************************************************************************
// Class definition for VyperSectionFactoryFactory
//*****************************************************************************
class VyperSectionFactoryFactory : public IStandardNotifier {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   VyperSectionFactoryFactory();

   virtual  ~VyperSectionFactoryFactory();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   VySection * create();

   //---------------------------------------------------------------------------
   // public member data
   //---------------------------------------------------------------------------
   static const INotificationId newObjectCreatedId;

protected:
private:

};   //VyperSectionFactoryFactory


//*****************************************************************************
// Class definition for VyperDocPropertiesFactoryFactory
//*****************************************************************************
class VyperDocPropertiesFactoryFactory : public IStandardNotifier {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   VyperDocPropertiesFactoryFactory(unsigned long anId);

   virtual  ~VyperDocPropertiesFactoryFactory();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   VyDocProperties * create();

   //---------------------------------------------------------------------------
   // public member data
   //---------------------------------------------------------------------------
   static const INotificationId newObjectCreatedId;

protected:
private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   static unsigned long id;


};   //VyperDocPropertiesFactoryFactory


//*****************************************************************************
// Class definition for VyperSectionPropertiesFactoryFactory
//*****************************************************************************
class VyperSectionPropertiesFactoryFactory : public IStandardNotifier {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   VyperSectionPropertiesFactoryFactory(unsigned long anId);

   virtual  ~VyperSectionPropertiesFactoryFactory();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   VySectionProperties * create();

   //---------------------------------------------------------------------------
   // public member data
   //---------------------------------------------------------------------------
   static const INotificationId newObjectCreatedId;

protected:
private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   static unsigned long id;


};   //VyperSectionPropertiesFactoryFactory


//*****************************************************************************
// Class definition for VyperSymbolSelectorFactoryFactory
//*****************************************************************************
class VyperSymbolSelectorFactoryFactory : public IStandardNotifier {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   VyperSymbolSelectorFactoryFactory(unsigned long anId);

   virtual  ~VyperSymbolSelectorFactoryFactory();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   VySymbolSelector * create();

   //---------------------------------------------------------------------------
   // public member data
   //---------------------------------------------------------------------------
   static const INotificationId newObjectCreatedId;

protected:
private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   static unsigned long id;


};   //VyperSymbolSelectorFactoryFactory


//*****************************************************************************
// Class definition for VyperInsertLinkFactoryFactory
//*****************************************************************************
class VyperInsertLinkFactoryFactory : public IStandardNotifier {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   VyperInsertLinkFactoryFactory(unsigned long anId);

   virtual  ~VyperInsertLinkFactoryFactory();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   VyLinkProperties * create();

   //---------------------------------------------------------------------------
   // public member data
   //---------------------------------------------------------------------------
   static const INotificationId newObjectCreatedId;

protected:
private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   static unsigned long id;


};   //VyperInsertLinkFactoryFactory


//*****************************************************************************
// Class definition for VyperInfoFactoryFactory
//*****************************************************************************
class VyperInfoFactoryFactory : public IStandardNotifier {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   VyperInfoFactoryFactory(unsigned long anId);

   virtual  ~VyperInfoFactoryFactory();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   VyInfo * create();

   //---------------------------------------------------------------------------
   // public member data
   //---------------------------------------------------------------------------
   static const INotificationId newObjectCreatedId;

protected:
private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   static unsigned long id;


};   //VyperInfoFactoryFactory


//*****************************************************************************
// Class definition for VyperRegFactoryFactory
//*****************************************************************************
class VyperRegFactoryFactory : public IStandardNotifier {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   VyperRegFactoryFactory(unsigned long anId);

   virtual  ~VyperRegFactoryFactory();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   VyRegistration * create();

   //---------------------------------------------------------------------------
   // public member data
   //---------------------------------------------------------------------------
   static const INotificationId newObjectCreatedId;

protected:
private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   static unsigned long id;


};   //VyperRegFactoryFactory


//*****************************************************************************
// Class definition for VyperWaitFactoryFactory
//*****************************************************************************
class VyperWaitFactoryFactory : public IStandardNotifier {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   VyperWaitFactoryFactory(unsigned long anId);

   virtual  ~VyperWaitFactoryFactory();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   VyWait * create();

   //---------------------------------------------------------------------------
   // public member data
   //---------------------------------------------------------------------------
   static const INotificationId newObjectCreatedId;

protected:
private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   static unsigned long id;


};   //VyperWaitFactoryFactory


//*****************************************************************************
// Class definition for VyperInsertArtFactoryFactory
//*****************************************************************************
class VyperInsertArtFactoryFactory : public IStandardNotifier {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   VyperInsertArtFactoryFactory(unsigned long anId);

   virtual  ~VyperInsertArtFactoryFactory();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   VyArtProperties * create();

   //---------------------------------------------------------------------------
   // public member data
   //---------------------------------------------------------------------------
   static const INotificationId newObjectCreatedId;

protected:
private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   static unsigned long id;


};   //VyperInsertArtFactoryFactory


//*****************************************************************************
// Class definition for Vyper
//*****************************************************************************
class Vyper : public IFrameWindow, public IObserver {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   Vyper(
      unsigned long id = defaultId(),
      IWindow* parent = IWindow::desktopWindow(),
      IWindow* owner = 0,
      const IRectangle& rect = defaultFramingSpec(),
      const IFrameWindow::Style& style = defaultStyle(),
      const char* title = 0);

   virtual  ~Vyper();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   static unsigned long defaultId();
   static const IRectangle defaultFramingSpec();
   static const IFrameWindow::Style defaultStyle();
   virtual Vyper & initializePart();
   Vyper * getVyperFrame() { return this; };
   VyperWaitFactoryFactory *  getWaitFactory() const { return iWaitFactory; };

   //---------------------------------------------------------------------------
   // public member data
   //---------------------------------------------------------------------------
   static const INotificationId readyId;

protected:
   //---------------------------------------------------------------------------
   // protected member functions
   //---------------------------------------------------------------------------
   Boolean makeConnections();
   virtual IObserver & dispatchNotificationEvent(const INotificationEvent & anEvent);

private:
   //---------------------------------------------------------------------------
   // private member data
   //---------------------------------------------------------------------------
   IMenuBar * iVyperFrameMenu;
   IAccelerator * iVyperFrameAccelTable;
   IInfoArea * iInfoArea1;
   ISplitCanvas * iVyperSplitCanvas;
   IVBContainerControl< VySection*, IVSequence<VySection*>, VyperSectionContainerCnrObj > * iSectionContainer;
   SectionEditHandler * iSectionContainerSectionEditHandler;
   ContainerHelpHandler * iSectionContainerContainerHelpHandler;
   IViewPort * iVyperPort;
   IHelpWindow * iHelpWindow;
   IVBFileDialog * iFileOpenDialog;
   IVBFileDialog * iFileSaveDialog;
   VyperSectionFactoryFactory * iSectionFactory;
   VyDoc * iFile;
   IVBFileDialog * iImportTextDialog;
   IVBFileDialog * iImportWinHelpDialog;
   IVBFileDialog * iExportIPFDialog;
   IVBFileDialog * iExportTraceDialog;
   IVBVariablePartPointer<VyDocProperties *> * iDocProperties;
   VyperDocPropertiesFactoryFactory * iDocPropertiesFactory;
   VyperSectionPropertiesFactoryFactory * iSectionPropertiesFactory;
   IVBVariablePartPointer<VySectionProperties *> * iSectionProperties;
   IVBFileDialog * iExportTextDialog;
   IVBVariablePartPointer<VySection *> * iSelectedSection;
   IVBVariablePartPointer<VySection *> * iOpenedSection;
   IVBVariablePartPointer<Editor *> * iEditor;
   IVBFontDialog * iInsertFont;
   IVBVariablePartPointer<VySymbolSelector *> * iSymbolSelector;
   VyperSymbolSelectorFactoryFactory * iSymbolSelectorFactory;
   IVBVariablePartPointer<VyLinkProperties *> * iInsertLink;
   VyperInsertLinkFactoryFactory * iInsertLinkFactory;
   IVBFontDialog * iEditFont;
   VyFont * iFont;
   Confirmation * iConfirmSectionDelete;
   Confirmation * iConfirmSectionPaste;
   Confirmation * iConfirmFileNew;
   Confirmation * iConfirmFileOpen;
   Confirmation * iComfirmFileClose;
   Confirmation * iConfirmImportText;
   Confirmation * iConfirmImportWinHelp;
   LogicalNot * iNotOpen;
   ITitle * iTitleBar;
   IVBVariableClass<Boolean> * iFileEmpty;
   LogicalNot * iNoProperties;
   IVSequence< VySymbol* > * iAllSymbols;
   IVBVariablePartPointer<VySymbol *> * iSelectedSymbol;
   CloseHandler * iInterceptClose;
   Confirmation * iConfirmClose;
   VyperInfoFactoryFactory * iInfoFactory;
   IVBVariablePartPointer<VyInfo *> * iInfo;
   ExceptionNotification * iExceptionNotification;
   Confirmation * iConfirmImportIpf;
   IVBFileDialog * iImportIpfDialog;
   IVBFileDialog * iExportHeaderDialog;
   IVBFileDialog * iExportRtfDialog;
   IVBFileDialog * iExportWinHelpDialog;
   VyperRegFactoryFactory * iRegFactory;
   IVBVariablePartPointer<VyRegistration *> * iRegistration;
   VySettings * iSettings;
   IVBVariablePartPointer<VyWait *> * iWait;
   VyperWaitFactoryFactory * iWaitFactory;
   IVBVariablePartPointer<VyArtProperties *> * iInsertArt;
   VyperInsertArtFactoryFactory * iInsertArtFactory;
   IVBFileDialog * iHtmlSingleDialog;
   IVBFileDialog * iHtmlFrameDialog;
   IVBFileDialog * iHtmlHelpDialog;
   VyperConn11 * conn11;
   VyperConn12 * conn12;
   VyperConn13 * conn13;
   VyperConn15 * conn15;
   VyperConn337 * conn337;
   VyperConn19 * conn19;
   VyperConn22 * conn22;
   VyperConn354 * conn354;
   VyperConn406 * conn406;
   VyperConn23 * conn23;
   VyperConn397 * conn397;
   VyperConn315 * conn315;
   VyperConn17 * conn17;
   VyperConn25 * conn25;
   VyperConn27 * conn27;
   VyperConn16 * conn16;
   VyperConn32 * conn32;
   VyperConn44 * conn44;
   VyperConn59 * conn59;
   VyperConn35 * conn35;
   VyperConn38 * conn38;
   VyperConn46 * conn46;
   VyperConn55 * conn55;
   VyperConn66 * conn66;
   VyperConn49 * conn49;
   VyperConn69 * conn69;
   VyperConn346 * conn346;
   VyperConn58 * conn58;
   VyperConn79 * conn79;
   VyperConn379 * conn379;
   VyperConn326 * conn326;
   VyperConn60 * conn60;
   VyperConn52 * conn52;
   VyperConn400 * conn400;
   VyperConn336 * conn336;
   VyperConn53 * conn53;
   VyperConn65 * conn65;
   VyperConn375 * conn375;
   VyperConn56 * conn56;
   VyperConn57 * conn57;
   VyperConn386 * conn386;
   VyperConn68 * conn68;
   VyperConn376 * conn376;
   VyperConn70 * conn70;
   VyperConn62 * conn62;
   VyperConn75 * conn75;
   VyperConn67 * conn67;
   VyperConn78 * conn78;
   VyperConn91 * conn91;
   VyperConn101 * conn101;
   VyperConn72 * conn72;
   VyperConn73 * conn73;
   VyperConn74 * conn74;
   VyperConn85 * conn85;
   VyperConn76 * conn76;
   VyperConn407 * conn407;
   VyperConn77 * conn77;
   VyperConn396 * conn396;
   VyperConn88 * conn88;
   VyperConn111 * conn111;
   VyperConn82 * conn82;
   VyperConn83 * conn83;
   VyperConn84 * conn84;
   VyperConn95 * conn95;
   VyperConn86 * conn86;
   VyperConn87 * conn87;
   VyperConn98 * conn98;
   VyperConn100 * conn100;
   VyperConn92 * conn92;
   VyperConn94 * conn94;
   VyperConn96 * conn96;
   VyperConn97 * conn97;
   VyperConn108 * conn108;
   VyperConn119 * conn119;
   VyperConn110 * conn110;
   VyperConn129 * conn129;
   VyperConn120 * conn120;
   VyperConn131 * conn131;
   VyperConn102 * conn102;
   VyperConn103 * conn103;
   VyperConn104 * conn104;
   VyperConn105 * conn105;
   VyperConn106 * conn106;
   VyperConn107 * conn107;
   VyperConn118 * conn118;
   VyperConn139 * conn139;
   VyperConn130 * conn130;
   VyperConn141 * conn141;
   VyperConn112 * conn112;
   VyperConn113 * conn113;
   VyperConn114 * conn114;
   VyperConn115 * conn115;
   VyperConn116 * conn116;
   VyperConn117 * conn117;
   VyperConn240 * conn240;
   VyperConn151 * conn151;
   VyperConn213 * conn213;
   VyperConn124 * conn124;
   VyperConn125 * conn125;
   VyperConn137 * conn137;
   VyperConn148 * conn148;
   VyperConn149 * conn149;
   VyperConn140 * conn140;
   VyperConn143 * conn143;
   VyperConn136 * conn136;
   VyperConn134 * conn134;
   VyperConn157 * conn157;
   VyperConn150 * conn150;
   VyperConn171 * conn171;
   VyperConn158 * conn158;
   VyperConn142 * conn142;
   VyperConn153 * conn153;
   VyperConn145 * conn145;
   VyperConn133 * conn133;
   VyperConn155 * conn155;
   VyperConn167 * conn167;
   VyperConn168 * conn168;
   VyperConn159 * conn159;
   VyperConn160 * conn160;
   VyperConn154 * conn154;
   VyperConn178 * conn178;
   VyperConn169 * conn169;
   VyperConn162 * conn162;
   VyperConn190 * conn190;
   VyperConn181 * conn181;
   VyperConn152 * conn152;
   VyperConn163 * conn163;
   VyperConn174 * conn174;
   VyperConn165 * conn165;
   VyperConn156 * conn156;
   VyperConn177 * conn177;
   VyperConn188 * conn188;
   VyperConn189 * conn189;
   VyperConn200 * conn200;
   VyperConn201 * conn201;
   VyperConn172 * conn172;
   VyperConn183 * conn183;
   VyperConn184 * conn184;
   VyperConn175 * conn175;
   VyperConn166 * conn166;
   VyperConn187 * conn187;
   VyperConn197 * conn197;
   VyperConn207 * conn207;
   VyperConn217 * conn217;
   VyperConn198 * conn198;
   VyperConn179 * conn179;
   VyperConn170 * conn170;
   VyperConn210 * conn210;
   VyperConn220 * conn220;
   VyperConn211 * conn211;
   VyperConn182 * conn182;
   VyperConn173 * conn173;
   VyperConn194 * conn194;
   VyperConn185 * conn185;
   VyperConn176 * conn176;
   VyperConn227 * conn227;
   VyperConn208 * conn208;
   VyperConn199 * conn199;
   VyperConn230 * conn230;
   VyperConn221 * conn221;
   VyperConn192 * conn192;
   VyperConn193 * conn193;
   VyperConn204 * conn204;
   VyperConn195 * conn195;
   VyperConn186 * conn186;
   VyperConn237 * conn237;
   VyperConn218 * conn218;
   VyperConn209 * conn209;
   VyperConn219 * conn219;
   VyperConn247 * conn247;
   VyperConn229 * conn229;
   VyperConn250 * conn250;
   VyperConn202 * conn202;
   VyperConn203 * conn203;
   VyperConn214 * conn214;
   VyperConn205 * conn205;
   VyperConn215 * conn215;
   VyperConn196 * conn196;
   VyperConn257 * conn257;
   VyperConn238 * conn238;
   VyperConn239 * conn239;
   VyperConn260 * conn260;
   VyperConn241 * conn241;
   VyperConn212 * conn212;
   VyperConn224 * conn224;
   VyperConn225 * conn225;
   VyperConn248 * conn248;
   VyperConn234 * conn234;
   VyperConn235 * conn235;
   VyperConn216 * conn216;
   VyperConn277 * conn277;
   VyperConn258 * conn258;
   VyperConn259 * conn259;
   VyperConn280 * conn280;
   VyperConn261 * conn261;
   VyperConn232 * conn232;
   VyperConn243 * conn243;
   VyperConn244 * conn244;
   VyperConn245 * conn245;
   VyperConn226 * conn226;
   VyperConn287 * conn287;
   VyperConn268 * conn268;
   VyperConn269 * conn269;
   VyperConn290 * conn290;
   VyperConn271 * conn271;
   VyperConn242 * conn242;
   VyperConn253 * conn253;
   VyperConn254 * conn254;
   VyperConn255 * conn255;
   VyperConn236 * conn236;
   VyperConn297 * conn297;
   VyperConn278 * conn278;
   VyperConn279 * conn279;
   VyperConn300 * conn300;
   VyperConn281 * conn281;
   VyperConn252 * conn252;
   VyperConn263 * conn263;
   VyperConn264 * conn264;
   VyperConn265 * conn265;
   VyperConn246 * conn246;
   VyperConn307 * conn307;
   VyperConn288 * conn288;
   VyperConn289 * conn289;
   VyperConn310 * conn310;
   VyperConn273 * conn273;
   VyperConn275 * conn275;
   VyperConn256 * conn256;
   VyperConn266 * conn266;
   VyperConn276 * conn276;
   VyperConn317 * conn317;
   VyperConn298 * conn298;
   VyperConn299 * conn299;
   VyperConn378 * conn378;
   VyperConn316 * conn316;
   VyperConn320 * conn320;
   VyperConn283 * conn283;
   VyperConn361 * conn361;
   VyperConn284 * conn284;
   VyperConn286 * conn286;
   VyperConn285 * conn285;
   VyperConn308 * conn308;
   VyperConn466 * conn466;
   VyperConn309 * conn309;
   VyperConn366 * conn366;
   VyperConn330 * conn330;
   VyperConn293 * conn293;
   VyperConn388 * conn388;
   VyperConn294 * conn294;
   VyperConn356 * conn356;
   VyperConn295 * conn295;
   VyperConn318 * conn318;
   VyperConn340 * conn340;
   VyperConn319 * conn319;
   VyperConn311 * conn311;
   VyperConn292 * conn292;
   VyperConn282 * conn282;
   VyperConn303 * conn303;
   VyperConn313 * conn313;
   VyperConn304 * conn304;
   VyperConn305 * conn305;
   VyperConn306 * conn306;
   VyperConn347 * conn347;
   VyperConn328 * conn328;
   VyperConn329 * conn329;
   VyperConn350 * conn350;
   VyperConn291 * conn291;
   VyperConn302 * conn302;
   VyperConn323 * conn323;
   VyperConn314 * conn314;
   VyperConn416 * conn416;
   VyperConn338 * conn338;
   VyperConn339 * conn339;
   VyperConn360 * conn360;
   VyperConn321 * conn321;
   VyperConn312 * conn312;
   VyperConn333 * conn333;
   VyperConn324 * conn324;
   VyperConn364 * conn364;
   VyperConn335 * conn335;
   VyperConn352 * conn352;
   VyperConn426 * conn426;
   VyperConn373 * conn373;
   VyperConn367 * conn367;
   VyperConn348 * conn348;
   VyperConn349 * conn349;
   VyperConn370 * conn370;
   VyperConn331 * conn331;
   VyperConn343 * conn343;
   VyperConn345 * conn345;
   VyperConn358 * conn358;
   VyperConn359 * conn359;
   VyperConn380 * conn380;
   VyperConn341 * conn341;
   VyperConn332 * conn332;
   VyperConn353 * conn353;
   VyperConn344 * conn344;
   VyperConn355 * conn355;
   VyperConn446 * conn446;
   VyperConn387 * conn387;
   VyperConn368 * conn368;
   VyperConn369 * conn369;
   VyperConn390 * conn390;
   VyperConn351 * conn351;
   VyperConn342 * conn342;
   VyperConn363 * conn363;
   VyperConn365 * conn365;

friend class VyperConn58;
friend class VyperConn196;
friend class VyperConn256;
friend class VyperConn266;
friend class VyperConn347;
friend class VyperConn328;

#include "Vyper.hpv"
};   //Vyper


/*----------------------------------------------------------------------------*/
/* Resume compiler default packing.                                           */
/*----------------------------------------------------------------------------*/
#pragma pack()

#endif
